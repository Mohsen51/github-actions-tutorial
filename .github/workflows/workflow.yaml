name: main-worklfow

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  KUBECTL_VERSION: "1.14.10"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  # Run all unit tests.
  run-tests:
    runs-on: ubuntu-latest
    steps:
      # Check out the pull request's source code.
      - name: Check out source code
        uses: actions/checkout@v3

      # Install Go.
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "^1.14" # The Go version to download and use.

      - name: Print Go version
        run: go version

      # Run unit tests.
      - name: Run unit tests
        run: go test -v ./... 

    # Build and release.
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      # Check out source code.
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # Deploy to Kubernetes.
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - run-tests
      - build-and-release
    steps:
      # Check out source code.
      - name: Check out source code
        uses: actions/checkout@v2

        # Set up kubectl.
      - name: Set up kubectl
        run: |-
          curl -sfLo kubectl https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # Configure kubectl.
      - name: Configure kubectl
        run: echo ${{ secrets.KUBECONFIG }} | base64 --decode > kubeconfig.yml

        # Deploy to Kubernetes.
      - name: Deploy to Kubernetes
        run: kubectl --kubeconfig kubeconfig.yml create deployment foobar --image=ghcr.io/${{ github.repository }}

        # Validate deployment.
      - name: Validate deployment
        run: kubectl --kubeconfig kubeconfig.yml rollout status --timeout 120s deployment/foobar
